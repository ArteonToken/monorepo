{
  "contractName": "ArteonPoolARTX2000",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gpu",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "listedToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "TokenAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "gpu",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "listedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxReward",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "halvings",
          "type": "uint256"
        }
      ],
      "name": "addToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "listedToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gpu\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"listedToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"TokenAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"halvings\",\"type\":\"uint256\"}],\"name\":\"addToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"listedToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gpu\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/D/Workspace/Arteon/monorepo/contracts/pools/ArteonPoolARTX2000.sol\":\"ArteonPoolARTX2000\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"/D/Workspace/Arteon/monorepo/contracts/gpu/ArteonGPU.sol\":{\"keccak256\":\"0x1e21a2db3ec49e44707ef9f2cbc1864e1f14a11a0e62659cafd48bcd86bab92e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82ec0c3fbfeb682d5a8651e896f09f4d805c90549c841554b148585316c2166d\",\"dweb:/ipfs/QmbmBdEb1C493RgywQmtra8QE6HM19G5wgxcwTgFufxNuu\"]},\"/D/Workspace/Arteon/monorepo/contracts/gpu/interfaces/IArteonGPU.sol\":{\"keccak256\":\"0x557ed749b22b448b1c88c80a199bfa9d64f010aace3d5d662fa2ce8d0ad067e2\",\"urls\":[\"bzz-raw://21003a77d03b9287295e965a58cce8dbb932dee948d6de886ea524a1d4272f8d\",\"dweb:/ipfs/QmZoZukDtSguJfV73TqssykZniB3BzkJrCyZDGw3T2NmZw\"]},\"/D/Workspace/Arteon/monorepo/contracts/miner/ArteonMiner.sol\":{\"keccak256\":\"0x361971feecb549a2fbb3bd3a33ebe686f01f1be874aaac362b27f3993b11de85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://008d96b225801a334ca91fee2a41412e447bf46ef36e3262baaee679c94c1a0d\",\"dweb:/ipfs/QmSo5gK2jZotbytPxszC9MUAa7hCHhEVsXzdNFyWNW6nZg\"]},\"/D/Workspace/Arteon/monorepo/contracts/miner/interfaces/IArteonMiner.sol\":{\"keccak256\":\"0xf673a505ecfebd57a8cbfe2c4abc4b45959a90d3e2ee9719e9ccfe7935011aa8\",\"urls\":[\"bzz-raw://0eef3c8fc1f31b8358c277167b5b4794534246acdb37b6df7996609dc568da36\",\"dweb:/ipfs/QmXoY7pJcANZJdpouFmEmizpZ8gDADGUcoybWdfuy41FGr\"]},\"/D/Workspace/Arteon/monorepo/contracts/pools/ArteonPoolARTX2000.sol\":{\"keccak256\":\"0xdf0f8fd91f7d99caa4b0ad7054544cd7b8b8f5b8d5ed5eb174f9fd0bbada19a5\",\"urls\":[\"bzz-raw://44d7d7979c5aab685d48de5994d297d603378ab8c87e2c006cd07dd79be62484\",\"dweb:/ipfs/QmTuS5VCH1CVoqhnC8fXuV5hmJhQabFYqGJH4BwLAkCmFH\"]},\"/D/Workspace/Arteon/monorepo/contracts/token/Arteon.sol\":{\"keccak256\":\"0x2f4c63b9fd9b1c6d2835ac0689b7079e33812e5be3088ed64cad317c9c0e899e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2f2b0d97e9bb300ec0026fa3b3d8be2d6abb55e0f5a5c078ce3e2ed28dd4b19\",\"dweb:/ipfs/QmdDhBLVjU9NKZKfj7UtW4Lkmt3Lcs1UBN6zWqXeBqx1b6\"]},\"/D/Workspace/Arteon/monorepo/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"/D/Workspace/Arteon/monorepo/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xfeccdcbf67b2006a715e5af1a4c7556004d95b2806552b5cc54e46e8eb7e887b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45b1f9043c0fb450272f20ed19ef633fcba1b129d602651a856dfae1a2243a2c\",\"dweb:/ipfs/QmUTSQiDikkcNtTtyDpkEwCM5ztVUUh9c1inBukn6HC5Vr\"]},\"/D/Workspace/Arteon/monorepo/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"/D/Workspace/Arteon/monorepo/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"/D/Workspace/Arteon/monorepo/node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x99f5c21018d796db7833a2100bb0e7411999e248a3c950fb526eee5d2bf47cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b31b80dd57f8c28320b01fa4f3ed98ac1aa678f61846c1db2771c996b77a9451\",\"dweb:/ipfs/QmcT2Di5L9t82A9XdYDZ4tWMEPGFVFazKDwC2Vrd135AA3\"]},\"/D/Workspace/Arteon/monorepo/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2d9f9af8b84d252e0e7ee716e4cb3ad1b58f3ec6619e4f54f40d4b5e28f75eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43d6abdcb4cd5be9933f526b53f21008e9a7ab75ce134478625cc8ccd3c1a638\",\"dweb:/ipfs/QmZrzWUYmNANRCvHaMGsJQXYnWCe6HvMmvrqaPn1GEcpJ1\"]},\"/D/Workspace/Arteon/monorepo/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://473e11d739868e0d9f48254ccf84ba63290d6a2321d59a37b74c244a27f9cad7\",\"dweb:/ipfs/QmUGzDmecP936jzgM7SYyGwR1YgBGsveoHHJTbDfB8jbGF\"]},\"/D/Workspace/Arteon/monorepo/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48593d699a4ef6b5bd2efb20d37320e69303fd27d4b59a2b6b8a8e563e608456\",\"dweb:/ipfs/QmdAPS8uLrzPJEeFZyJVkwTtaL3KB9jo9wJm1UcoJP55wT\"]},\"/D/Workspace/Arteon/monorepo/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c583283c838cc624a96a69eaa823fa92ac5294ec88d417e266c09ea091e0ae62\",\"dweb:/ipfs/QmNdzitXaFADaxooWpB4WsckkDyr4j6GQRxBjyKXsvEeXv\"]},\"/D/Workspace/Arteon/monorepo/node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0xd260defa45bc1bbdf5e6d74298fb2705bf058c3d2beb17fb1158fa1a430c5024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ada67d8251f88b8c3df5a79d9d4930fd7061634fb110478c407b4d9abc3e120\",\"dweb:/ipfs/QmeEdLBhUuF7C2ZtzTWjSCAbcemFtma8Gh91pFY3djaTz3\"]},\"/D/Workspace/Arteon/monorepo/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"/D/Workspace/Arteon/monorepo/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"/D/Workspace/Arteon/monorepo/node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x62d306ff0499a11913bc60b5939eec619509b5c67b30e86ebf8b8bda0b7a7fee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6712ca27a06062db31465b1470e6207553553a9bb0b4358d918b35bdae5b4ffe\",\"dweb:/ipfs/QmZ92pU9DJ3h1qREMFvDQhArSy6fh6zA983NeLFHRs1qKJ\"]},\"/D/Workspace/Arteon/monorepo/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f\",\"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy\"]},\"/D/Workspace/Arteon/monorepo/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"/D/Workspace/Arteon/monorepo/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"/D/Workspace/Arteon/monorepo/node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1477864def7febd9826918e50482a1ee7068b337b03804a7e0e98c674ac57c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bdd8ea2ace1bf716007318f8aca21d32384f0b8b295adac55147270767441fa\",\"dweb:/ipfs/QmSv235N45Ub3wFXdTLNiS3k4b7FAudtEL8s6g1PwcsCcS\"]},\"/D/Workspace/Arteon/monorepo/node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051611f73380380611f7383398101604081905261002f916100ac565b60006100396100a8565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600380546001600160a01b0319166001600160a01b03929092169190911790556100da565b3390565b6000602082840312156100bd578081fd5b81516001600160a01b03811681146100d3578182fd5b9392505050565b611e8a806100e96000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100db5780639d63848a146100e3578063b27dbeaf146100f8578063f2fde38b1461010b57610088565b8063597704381461008d5780635a9d1ac3146100b6578063715018a6146100c9578063824af0e0146100d3575b600080fd5b6100a061009b366004610710565b61011e565b6040516100ad91906107bb565b60405180910390f35b6100a06100c4366004610769565b610146565b6100d161017d565b005b6100a0610268565b6100a0610284565b6100eb6102a0565b6040516100ad9190610909565b6100a0610106366004610731565b6102a6565b6100d1610119366004610710565b610589565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061015657600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b6101856106d6565b73ffffffffffffffffffffffffffffffffffffffff166101a3610284565b73ffffffffffffffffffffffffffffffffffffffff16146101f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f09061089d565b60405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b60025490565b60006102b06106d6565b73ffffffffffffffffffffffffffffffffffffffff166102ce610284565b73ffffffffffffffffffffffffffffffffffffffff161461031b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f09061089d565b73ffffffffffffffffffffffffffffffffffffffff858116600090815260016020526040902054161561037a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f0906108d2565b60006040518060200161038c906106da565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f9091011660408190526003549192506000916103ed91899173ffffffffffffffffffffffffffffffffffffffff1690602001610781565b604051602081830303815290604052805190602001209050808251602084016000f56003546040517fd13f90b400000000000000000000000000000000000000000000000000000000815291945073ffffffffffffffffffffffffffffffffffffffff8086169263d13f90b492610471928c929116908b908b908b906004016107dc565b600060405180830381600087803b15801561048b57600080fd5b505af115801561049f573d6000803e3d6000fd5b50505073ffffffffffffffffffffffffffffffffffffffff80891660008181526001602081905260408083208054958a167fffffffffffffffffffffffff0000000000000000000000000000000000000000968716811790915580845281842080548716909517909455600280549283018155928390527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9091018054909416909217909255905490517ff4c563a3ea86ff1f4275e8c207df0375a51963f2b831b7bf4da8be938d92876c925061057791869161081a565b60405180910390a15050949350505050565b6105916106d6565b73ffffffffffffffffffffffffffffffffffffffff166105af610284565b73ffffffffffffffffffffffffffffffffffffffff16146105fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f09061089d565b73ffffffffffffffffffffffffffffffffffffffff8116610649576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f090610840565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b3390565b6115428061091383390190565b803573ffffffffffffffffffffffffffffffffffffffff8116811461070b57600080fd5b919050565b600060208284031215610721578081fd5b61072a826106e7565b9392505050565b60008060008060808587031215610746578283fd5b61074f856106e7565b966020860135965060408601359560600135945092505050565b60006020828403121561077a578081fd5b5035919050565b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606093841b811682529190921b16601482015260280190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff958616815293909416602084015260408301919091526060820152608081019190915260a00190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601a908201527f417274656f6e506f6f6c3a204c495354494e475f455849535453000000000000604082015260600190565b9081526020019056fe608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b6114c58061007d6000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c80638c359f4b116100d8578063d13f90b41161008c578063d717a39311610066578063d717a3931461029b578063f2fde38b146102a3578063f9f680db146102b657610177565b8063d13f90b414610278578063d6f192621461028b578063d700933b1461029357610177565b80639e570729116100bd5780639e57072914610255578063c1a75d9e14610268578063c213f3f91461027057610177565b80638c359f4b1461023a5780638da5cb5b1461024d57610177565b806354cba1d11161012f5780636352211e116101145780636352211e146101ff57806370a082311461021f578063715018a61461023257610177565b806354cba1d1146101f75780635ee0aca0146101e557610177565b8063150b7a0211610160578063150b7a02146101c557806318160ddd146101e55780633d18b912146101ed57610177565b806301ffc9a71461017c5780630700037d146101a5575b600080fd5b61018f61018a366004611064565b6102be565b60405161019c9190611134565b60405180910390f35b6101b86101b3366004610f14565b610309565b60405161019c9190611383565b6101d86101d3366004610f2e565b610331565b60405161019c919061113f565b6101b861035a565b6101f5610361565b005b6101b8610479565b61021261020d3660046110a4565b61047f565b60405161019c91906110bc565b6101b861022d366004610f14565b6104ea565b6101f5610512565b6101f56102483660046110a4565b6105f4565b6102126106f9565b6101f56102633660046110a4565b610715565b6102126107fa565b6101b8610816565b6101f5610286366004611018565b61081c565b6101b8610896565b6101b86108a5565b6101b86108ab565b6101f56102b1366004610f14565b6108b1565b6102126109fe565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f01ffc9a700000000000000000000000000000000000000000000000000000000145b919050565b73ffffffffffffffffffffffffffffffffffffffff166000908152600c602052604090205490565b7f150b7a0200000000000000000000000000000000000000000000000000000000949350505050565b6001545b90565b33600061036c610a1a565b905080156104755773ffffffffffffffffffffffffffffffffffffffff8083166000908152600c60205260408082209190915560055490517f40c10f190000000000000000000000000000000000000000000000000000000081529116906340c10f19906103e0908590859060040161110e565b600060405180830381600087803b1580156103fa57600080fd5b505af115801561040e573d6000803e3d6000fd5b50505073ffffffffffffffffffffffffffffffffffffffff83166000908152600d602052604090819020429055517f619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc9915061046c908490849061110e565b60405180910390a15b5050565b600a5490565b60008181526004602052604081205473ffffffffffffffffffffffffffffffffffffffff16806104e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db90611200565b60405180910390fd5b92915050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b61051a610b27565b73ffffffffffffffffffffffffffffffffffffffff166105386106f9565b73ffffffffffffffffffffffffffffffffffffffff1614610585576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db9061125d565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b336000818152600360205260409020541561061157610611610361565b6006546040517f42842e0e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906342842e0e9061066b908490309087906004016110dd565b600060405180830381600087803b15801561068557600080fd5b505af1158015610699573d6000803e3d6000fd5b505050506106a78183610b2b565b8073ffffffffffffffffffffffffffffffffffffffff167ffbd0a3f6e9a0dd5f834515748047e83de8064477489a0a0d6b59c64bbecc992a836040516106ed9190611383565b60405180910390a25050565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b61071d610361565b336107288183610cca565b6006546040517f42842e0e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906342842e0e90610782903090859087906004016110dd565b600060405180830381600087803b15801561079c57600080fd5b505af11580156107b0573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff167f13b865880a841dc469b629159fa1e730fee99568b0decc6737fd688b36246381836040516106ed9190611383565b60065473ffffffffffffffffffffffffffffffffffffffff1681565b60085490565b6005805473ffffffffffffffffffffffffffffffffffffffff8088167fffffffffffffffffffffffff000000000000000000000000000000000000000092831617909255600680549287169290911691909117905560078390556008829055600a8190554361088b8183610e68565b600b55505050505050565b60006108a0610a1a565b905090565b600b5490565b60095490565b6108b9610b27565b73ffffffffffffffffffffffffffffffffffffffff166108d76106f9565b73ffffffffffffffffffffffffffffffffffffffff1614610924576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db9061125d565b73ffffffffffffffffffffffffffffffffffffffff8116610971576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db9061116c565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60055473ffffffffffffffffffffffffffffffffffffffff1681565b336000818152600d6020526040812054600754919291610a3a908261138c565b421115610afc576000610a4d824261141a565b73ffffffffffffffffffffffffffffffffffffffff841660009081526003602052604081205491925090610a7f610e7b565b610a8991906113dd565b9050610a9582826113dd565b73ffffffffffffffffffffffffffffffffffffffff85166000908152600c6020526040902054610ac5919061138c565b73ffffffffffffffffffffffffffffffffffffffff85166000908152600c6020908152604080832093909355600d90522042905550505b5073ffffffffffffffffffffffffffffffffffffffff166000908152600c6020526040902054905090565b3390565b610b4a8273ffffffffffffffffffffffffffffffffffffffff16610ea0565b15610b81576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db906111c9565b3273ffffffffffffffffffffffffffffffffffffffff831614610bd0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db906111c9565b60008111610c0a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db90611326565b60018054610c1791610e68565b600190815573ffffffffffffffffffffffffffffffffffffffff8316600090815260036020526040902054610c4b91610e68565b73ffffffffffffffffffffffffffffffffffffffff83166000818152600360209081526040808320949094558482526004815283822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001684179055918152600d90915220429055610cbd610ea6565b610cc5610e7b565b505050565b60008111610d04576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db90611292565b60008181526004602052604090205473ffffffffffffffffffffffffffffffffffffffff838116911614610d64576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db906112ef565b60018054610d7191610ed8565b600190815573ffffffffffffffffffffffffffffffffffffffff8316600090815260036020526040902054610da591610ed8565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260036020908152604080832093909355838252600490522080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055610e08826104ea565b610e375773ffffffffffffffffffffffffffffffffffffffff82166000908152600d6020526040812055610e60565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600d602052604090204290555b610cbd610ea6565b6000610e74828461138c565b9392505050565b600060015460001415610e905750600061035e565b6001546008546108a091906113a4565b3b151590565b600b544390811115610ed557600a54610ec0908290610e68565b600b55600854610ed1906002610ee4565b6008555b50565b6000610e74828461141a565b6000610e7482846113a4565b803573ffffffffffffffffffffffffffffffffffffffff8116811461030457600080fd5b600060208284031215610f25578081fd5b610e7482610ef0565b60008060008060808587031215610f43578283fd5b610f4c85610ef0565b93506020610f5b818701610ef0565b935060408601359250606086013567ffffffffffffffff80821115610f7e578384fd5b818801915088601f830112610f91578384fd5b813581811115610fa357610fa3611460565b604051847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401168201018181108482111715610fe457610fe4611460565b60405281815283820185018b1015610ffa578586fd5b81858501868301379081019093019390935250939692955090935050565b600080600080600060a0868803121561102f578081fd5b61103886610ef0565b945061104660208701610ef0565b94979496505050506040830135926060810135926080909101359150565b600060208284031215611075578081fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610e74578182fd5b6000602082840312156110b5578081fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b901515815260200190565b7fffffffff0000000000000000000000000000000000000000000000000000000091909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b60208082526008908201527f5265717569726564000000000000000000000000000000000000000000000000604082015260600190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201527f656e7420746f6b656e0000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526027908201527f596f75206e65656420746f2064656163746976617465206174206c656173742060408201527f6f6e652047505500000000000000000000000000000000000000000000000000606082015260800190565b6020808252601c908201527f417274656f6e4d696e65723a204e4f545f544f4b454e5f4f574e455200000000604082015260600190565b60208082526025908201527f596f75206e65656420746f206163746976617465206174206c65617374206f6e60408201527f6520475055000000000000000000000000000000000000000000000000000000606082015260800190565b90815260200190565b6000821982111561139f5761139f611431565b500190565b6000826113d8577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561141557611415611431565b500290565b60008282101561142c5761142c611431565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220afbc2bed3d18be53c39c14704252b31673e52a77c74d2e33676e5b059bac3c5664736f6c63430008000033a26469706673582212201e46ecc2c1472aab09a5b3cc23a546a900281da276a68c03d016bf38325ed60164736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100db5780639d63848a146100e3578063b27dbeaf146100f8578063f2fde38b1461010b57610088565b8063597704381461008d5780635a9d1ac3146100b6578063715018a6146100c9578063824af0e0146100d3575b600080fd5b6100a061009b366004610710565b61011e565b6040516100ad91906107bb565b60405180910390f35b6100a06100c4366004610769565b610146565b6100d161017d565b005b6100a0610268565b6100a0610284565b6100eb6102a0565b6040516100ad9190610909565b6100a0610106366004610731565b6102a6565b6100d1610119366004610710565b610589565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061015657600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b6101856106d6565b73ffffffffffffffffffffffffffffffffffffffff166101a3610284565b73ffffffffffffffffffffffffffffffffffffffff16146101f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f09061089d565b60405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b60025490565b60006102b06106d6565b73ffffffffffffffffffffffffffffffffffffffff166102ce610284565b73ffffffffffffffffffffffffffffffffffffffff161461031b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f09061089d565b73ffffffffffffffffffffffffffffffffffffffff858116600090815260016020526040902054161561037a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f0906108d2565b60006040518060200161038c906106da565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f9091011660408190526003549192506000916103ed91899173ffffffffffffffffffffffffffffffffffffffff1690602001610781565b604051602081830303815290604052805190602001209050808251602084016000f56003546040517fd13f90b400000000000000000000000000000000000000000000000000000000815291945073ffffffffffffffffffffffffffffffffffffffff8086169263d13f90b492610471928c929116908b908b908b906004016107dc565b600060405180830381600087803b15801561048b57600080fd5b505af115801561049f573d6000803e3d6000fd5b50505073ffffffffffffffffffffffffffffffffffffffff80891660008181526001602081905260408083208054958a167fffffffffffffffffffffffff0000000000000000000000000000000000000000968716811790915580845281842080548716909517909455600280549283018155928390527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9091018054909416909217909255905490517ff4c563a3ea86ff1f4275e8c207df0375a51963f2b831b7bf4da8be938d92876c925061057791869161081a565b60405180910390a15050949350505050565b6105916106d6565b73ffffffffffffffffffffffffffffffffffffffff166105af610284565b73ffffffffffffffffffffffffffffffffffffffff16146105fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f09061089d565b73ffffffffffffffffffffffffffffffffffffffff8116610649576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f090610840565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b3390565b6115428061091383390190565b803573ffffffffffffffffffffffffffffffffffffffff8116811461070b57600080fd5b919050565b600060208284031215610721578081fd5b61072a826106e7565b9392505050565b60008060008060808587031215610746578283fd5b61074f856106e7565b966020860135965060408601359560600135945092505050565b60006020828403121561077a578081fd5b5035919050565b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606093841b811682529190921b16601482015260280190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff958616815293909416602084015260408301919091526060820152608081019190915260a00190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601a908201527f417274656f6e506f6f6c3a204c495354494e475f455849535453000000000000604082015260600190565b9081526020019056fe608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b6114c58061007d6000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c80638c359f4b116100d8578063d13f90b41161008c578063d717a39311610066578063d717a3931461029b578063f2fde38b146102a3578063f9f680db146102b657610177565b8063d13f90b414610278578063d6f192621461028b578063d700933b1461029357610177565b80639e570729116100bd5780639e57072914610255578063c1a75d9e14610268578063c213f3f91461027057610177565b80638c359f4b1461023a5780638da5cb5b1461024d57610177565b806354cba1d11161012f5780636352211e116101145780636352211e146101ff57806370a082311461021f578063715018a61461023257610177565b806354cba1d1146101f75780635ee0aca0146101e557610177565b8063150b7a0211610160578063150b7a02146101c557806318160ddd146101e55780633d18b912146101ed57610177565b806301ffc9a71461017c5780630700037d146101a5575b600080fd5b61018f61018a366004611064565b6102be565b60405161019c9190611134565b60405180910390f35b6101b86101b3366004610f14565b610309565b60405161019c9190611383565b6101d86101d3366004610f2e565b610331565b60405161019c919061113f565b6101b861035a565b6101f5610361565b005b6101b8610479565b61021261020d3660046110a4565b61047f565b60405161019c91906110bc565b6101b861022d366004610f14565b6104ea565b6101f5610512565b6101f56102483660046110a4565b6105f4565b6102126106f9565b6101f56102633660046110a4565b610715565b6102126107fa565b6101b8610816565b6101f5610286366004611018565b61081c565b6101b8610896565b6101b86108a5565b6101b86108ab565b6101f56102b1366004610f14565b6108b1565b6102126109fe565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f01ffc9a700000000000000000000000000000000000000000000000000000000145b919050565b73ffffffffffffffffffffffffffffffffffffffff166000908152600c602052604090205490565b7f150b7a0200000000000000000000000000000000000000000000000000000000949350505050565b6001545b90565b33600061036c610a1a565b905080156104755773ffffffffffffffffffffffffffffffffffffffff8083166000908152600c60205260408082209190915560055490517f40c10f190000000000000000000000000000000000000000000000000000000081529116906340c10f19906103e0908590859060040161110e565b600060405180830381600087803b1580156103fa57600080fd5b505af115801561040e573d6000803e3d6000fd5b50505073ffffffffffffffffffffffffffffffffffffffff83166000908152600d602052604090819020429055517f619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc9915061046c908490849061110e565b60405180910390a15b5050565b600a5490565b60008181526004602052604081205473ffffffffffffffffffffffffffffffffffffffff16806104e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db90611200565b60405180910390fd5b92915050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b61051a610b27565b73ffffffffffffffffffffffffffffffffffffffff166105386106f9565b73ffffffffffffffffffffffffffffffffffffffff1614610585576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db9061125d565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b336000818152600360205260409020541561061157610611610361565b6006546040517f42842e0e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906342842e0e9061066b908490309087906004016110dd565b600060405180830381600087803b15801561068557600080fd5b505af1158015610699573d6000803e3d6000fd5b505050506106a78183610b2b565b8073ffffffffffffffffffffffffffffffffffffffff167ffbd0a3f6e9a0dd5f834515748047e83de8064477489a0a0d6b59c64bbecc992a836040516106ed9190611383565b60405180910390a25050565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b61071d610361565b336107288183610cca565b6006546040517f42842e0e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906342842e0e90610782903090859087906004016110dd565b600060405180830381600087803b15801561079c57600080fd5b505af11580156107b0573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff167f13b865880a841dc469b629159fa1e730fee99568b0decc6737fd688b36246381836040516106ed9190611383565b60065473ffffffffffffffffffffffffffffffffffffffff1681565b60085490565b6005805473ffffffffffffffffffffffffffffffffffffffff8088167fffffffffffffffffffffffff000000000000000000000000000000000000000092831617909255600680549287169290911691909117905560078390556008829055600a8190554361088b8183610e68565b600b55505050505050565b60006108a0610a1a565b905090565b600b5490565b60095490565b6108b9610b27565b73ffffffffffffffffffffffffffffffffffffffff166108d76106f9565b73ffffffffffffffffffffffffffffffffffffffff1614610924576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db9061125d565b73ffffffffffffffffffffffffffffffffffffffff8116610971576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db9061116c565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60055473ffffffffffffffffffffffffffffffffffffffff1681565b336000818152600d6020526040812054600754919291610a3a908261138c565b421115610afc576000610a4d824261141a565b73ffffffffffffffffffffffffffffffffffffffff841660009081526003602052604081205491925090610a7f610e7b565b610a8991906113dd565b9050610a9582826113dd565b73ffffffffffffffffffffffffffffffffffffffff85166000908152600c6020526040902054610ac5919061138c565b73ffffffffffffffffffffffffffffffffffffffff85166000908152600c6020908152604080832093909355600d90522042905550505b5073ffffffffffffffffffffffffffffffffffffffff166000908152600c6020526040902054905090565b3390565b610b4a8273ffffffffffffffffffffffffffffffffffffffff16610ea0565b15610b81576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db906111c9565b3273ffffffffffffffffffffffffffffffffffffffff831614610bd0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db906111c9565b60008111610c0a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db90611326565b60018054610c1791610e68565b600190815573ffffffffffffffffffffffffffffffffffffffff8316600090815260036020526040902054610c4b91610e68565b73ffffffffffffffffffffffffffffffffffffffff83166000818152600360209081526040808320949094558482526004815283822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001684179055918152600d90915220429055610cbd610ea6565b610cc5610e7b565b505050565b60008111610d04576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db90611292565b60008181526004602052604090205473ffffffffffffffffffffffffffffffffffffffff838116911614610d64576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db906112ef565b60018054610d7191610ed8565b600190815573ffffffffffffffffffffffffffffffffffffffff8316600090815260036020526040902054610da591610ed8565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260036020908152604080832093909355838252600490522080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055610e08826104ea565b610e375773ffffffffffffffffffffffffffffffffffffffff82166000908152600d6020526040812055610e60565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600d602052604090204290555b610cbd610ea6565b6000610e74828461138c565b9392505050565b600060015460001415610e905750600061035e565b6001546008546108a091906113a4565b3b151590565b600b544390811115610ed557600a54610ec0908290610e68565b600b55600854610ed1906002610ee4565b6008555b50565b6000610e74828461141a565b6000610e7482846113a4565b803573ffffffffffffffffffffffffffffffffffffffff8116811461030457600080fd5b600060208284031215610f25578081fd5b610e7482610ef0565b60008060008060808587031215610f43578283fd5b610f4c85610ef0565b93506020610f5b818701610ef0565b935060408601359250606086013567ffffffffffffffff80821115610f7e578384fd5b818801915088601f830112610f91578384fd5b813581811115610fa357610fa3611460565b604051847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401168201018181108482111715610fe457610fe4611460565b60405281815283820185018b1015610ffa578586fd5b81858501868301379081019093019390935250939692955090935050565b600080600080600060a0868803121561102f578081fd5b61103886610ef0565b945061104660208701610ef0565b94979496505050506040830135926060810135926080909101359150565b600060208284031215611075578081fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610e74578182fd5b6000602082840312156110b5578081fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b901515815260200190565b7fffffffff0000000000000000000000000000000000000000000000000000000091909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b60208082526008908201527f5265717569726564000000000000000000000000000000000000000000000000604082015260600190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201527f656e7420746f6b656e0000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526027908201527f596f75206e65656420746f2064656163746976617465206174206c656173742060408201527f6f6e652047505500000000000000000000000000000000000000000000000000606082015260800190565b6020808252601c908201527f417274656f6e4d696e65723a204e4f545f544f4b454e5f4f574e455200000000604082015260600190565b60208082526025908201527f596f75206e65656420746f206163746976617465206174206c65617374206f6e60408201527f6520475055000000000000000000000000000000000000000000000000000000606082015260800190565b90815260200190565b6000821982111561139f5761139f611431565b500190565b6000826113d8577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561141557611415611431565b500290565b60008282101561142c5761142c611431565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220afbc2bed3d18be53c39c14704252b31673e52a77c74d2e33676e5b059bac3c5664736f6c63430008000033a26469706673582212201e46ecc2c1472aab09a5b3cc23a546a900281da276a68c03d016bf38325ed60164736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:326:37",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:37",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:37"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:37"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:37",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:37",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:37"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:37"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:37",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:37"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:37"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:37"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:37",
                "type": ""
              }
            ],
            "src": "14:310:37"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 37,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3778:37",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:37",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:147:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:37"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:37"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "190:16:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "199:1:37",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "202:1:37",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "192:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "192:12:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "192:12:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:37"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "144:42:37",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:54:37"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:65:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:73:37"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:37"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:37",
                "type": ""
              }
            ],
            "src": "14:198:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "287:128:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "333:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "342:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "350:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "335:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "335:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "335:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "308:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "317:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "304:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "304:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "329:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "300:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "300:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "297:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "368:41:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "399:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "378:20:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "378:31:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "368:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "253:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "264:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "276:6:37",
                "type": ""
              }
            ],
            "src": "217:198:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "541:282:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "588:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "597:6:37"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "605:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "590:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "590:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "590:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "562:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "571:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "558:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "558:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "583:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "554:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "554:33:37"
                  },
                  "nodeType": "YulIf",
                  "src": "551:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "623:41:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "654:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "633:20:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "633:31:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "623:6:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "673:42:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "700:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "711:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "696:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "696:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "683:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "683:32:37"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "673:6:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "724:42:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "751:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "762:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "747:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "747:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "734:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "734:32:37"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "724:6:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "775:42:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "802:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "813:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "798:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "798:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "785:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "785:32:37"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "775:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "483:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "494:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "506:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "514:6:37",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "522:6:37",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "530:6:37",
                "type": ""
              }
            ],
            "src": "420:403:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "898:120:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "944:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "953:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "961:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "946:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "946:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "946:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "919:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "928:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "915:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "915:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "940:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "911:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "911:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "908:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "979:33:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1002:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "989:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "989:23:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "979:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "864:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "875:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "887:6:37",
                "type": ""
              }
            ],
            "src": "828:190:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1170:221:37",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1180:76:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1190:66:37",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1184:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1272:3:37"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1285:2:37",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1289:6:37"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1281:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1281:15:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1298:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1277:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1277:24:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1265:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1265:37:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1265:37:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1322:3:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1327:2:37",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1318:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1318:12:37"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1340:2:37",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "1344:6:37"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1336:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1336:15:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1353:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1332:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1332:24:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1311:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1311:46:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1311:46:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1366:19:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1377:3:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1382:2:37",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1373:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1373:12:37"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1366:3:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1138:3:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1143:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1151:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1162:3:37",
                "type": ""
              }
            ],
            "src": "1023:368:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1497:125:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1507:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1519:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1530:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1515:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1515:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1507:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1549:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1564:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1572:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1560:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1560:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1542:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1542:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1542:74:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1466:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1477:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1488:4:37",
                "type": ""
              }
            ],
            "src": "1396:226:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1840:329:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1850:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1862:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1873:3:37",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1858:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1858:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1850:4:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1886:52:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1896:42:37",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1890:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1954:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1969:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1977:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1965:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1965:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1947:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1947:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1947:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2001:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2012:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1997:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1997:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2021:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2029:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2017:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2017:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1990:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1990:43:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1990:43:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2053:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2064:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2049:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2049:18:37"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2069:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2042:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2042:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2042:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2096:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2107:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2092:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2092:18:37"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "2112:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2085:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2085:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2085:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2139:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2150:3:37",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2135:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2135:19:37"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "2156:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2128:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2128:35:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2128:35:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1777:9:37",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1788:6:37",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1796:6:37",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1804:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1812:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1820:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1831:4:37",
                "type": ""
              }
            ],
            "src": "1627:542:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2303:168:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2313:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2325:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2336:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2321:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2321:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2313:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2355:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2370:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2378:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2366:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2366:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2348:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2348:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2348:74:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2442:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2453:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2438:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2438:18:37"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2458:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2431:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2431:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2431:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2264:9:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2275:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2283:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2294:4:37",
                "type": ""
              }
            ],
            "src": "2174:297:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2650:228:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2667:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2678:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2660:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2660:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2660:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2701:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2712:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2697:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2697:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2717:2:37",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2690:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2690:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2690:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2740:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2751:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2736:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2736:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2756:34:37",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2729:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2729:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2729:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2811:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2822:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2807:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2807:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2827:8:37",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2800:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2800:36:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2800:36:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2845:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2857:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2868:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2853:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2853:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2845:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2627:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2641:4:37",
                "type": ""
              }
            ],
            "src": "2476:402:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3057:182:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3074:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3085:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3067:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3067:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3067:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3108:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3119:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3104:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3104:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3124:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3097:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3097:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3097:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3147:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3158:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3143:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3143:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3163:34:37",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3136:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3136:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3136:62:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3207:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3219:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3230:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3215:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3215:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3207:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3034:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3048:4:37",
                "type": ""
              }
            ],
            "src": "2883:356:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3418:176:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3435:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3446:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3428:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3428:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3428:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3469:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3480:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3465:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3465:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3485:2:37",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3458:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3458:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3458:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3508:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3519:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3504:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3504:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3524:28:37",
                        "type": "",
                        "value": "ArteonPool: LISTING_EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3497:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3497:56:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3497:56:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3562:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3574:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3585:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3570:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3570:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3562:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d7289d4fc10a3cf86d094f0efab5326bac31e9543ff80f1274ab0b587ebe59f3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3395:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3409:4:37",
                "type": ""
              }
            ],
            "src": "3244:350:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3700:76:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3710:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3722:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3733:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3718:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3718:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3710:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3752:9:37"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3763:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3745:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3745:25:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3745:25:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3669:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3680:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3691:4:37",
                "type": ""
              }
            ],
            "src": "3599:177:37"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d7289d4fc10a3cf86d094f0efab5326bac31e9543ff80f1274ab0b587ebe59f3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"ArteonPool: LISTING_EXISTS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
      "id": 37,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "192:1153:14:-:0;;;391:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:18;887:12;:10;:12::i;:::-;909:6;:18;;-1:-1:-1;;;;;;909:18:18;-1:-1:-1;;;;;909:18:18;;;;;;;942:43;;909:18;;-1:-1:-1;909:18:18;942:43;;909:6;;942:43;-1:-1:-1;424:3:14;:10;;-1:-1:-1;;;;;;424:10:14;-1:-1:-1;;;;;424:10:14;;;;;;;;;;192:1153;;586:96:30;665:10;586:96;:::o;14:310:37:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:37;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:37:o;:::-;192:1153:14;;;;;;",
  "deployedSourceMap": "192:1153:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;235:44;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;284:29;;;;;;:::i;:::-;;:::i;1700:145:18:-;;;:::i;:::-;;318:18:14;;;:::i;1068:85:18:-;;;:::i;446:86:14:-;;;:::i;:::-;;;;;;;:::i;538:804::-;;;;;;:::i;:::-;;:::i;1994:240:18:-;;;;;;:::i;:::-;;:::i;235:44:14:-;;;;;;;;;;;;;;;:::o;284:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;284:29:14;:::o;1700:145:18:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;::::1;1790:6:::0;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;;::::1;::::0;;1700:145::o;318:18:14:-;;;;;;:::o;1068:85:18:-;1114:7;1140:6;;;1068:85;:::o;446:86:14:-;507:12;:19;446:86;:::o;538:804::-;655:19;1291:12:18;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;691:29:14::1;:15:::0;;::::1;718:1;691:15:::0;;;:8:::1;:15;::::0;;;;;::::1;:29:::0;683:68:::1;;;;;;;;;;;;:::i;:::-;842:21;866:30;;;;;;;;:::i;:::-;::::0;;;;;;;;::::1;::::0;;::::1;;;::::0;;;952:3:::1;::::0;866:30;;-1:-1:-1;903:12:14::1;::::0;928:28:::1;::::0;945:5;;952:3:::1;;::::0;866:30:::1;928:28;;:::i;:::-;;;;;;;;;;;;;918:39;;;;;;903:54;;1044:4;1033:8;1027:15;1022:2;1012:8;1008:17;1005:1;997:52;1108:3;::::0;1064:80:::1;::::0;;;;982:67;;-1:-1:-1;1064:36:14::1;::::0;;::::1;::::0;::::1;::::0;:80:::1;::::0;1101:5;;1108:3;::::1;::::0;1113:9;;1124;;1135:8;;1064:80:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;1151:15:14::1;::::0;;::::1;;::::0;;;:8:::1;:15;::::0;;;;;;;:29;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;1187:21;;;;;;:29;;;::::1;::::0;;::::1;::::0;;;1223:12:::1;:30:::0;;;;::::1;::::0;;;;;;;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;1291:19;;1267:44;;::::1;::::0;-1:-1:-1;1267:44:14::1;::::0;1169:11;;1267:44:::1;:::i;:::-;;;;;;;;1318:18;;538:804:::0;;;;;;:::o;1994:240:18:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;2082:22:::1;::::0;::::1;2074:73;;;;;;;;;;;;:::i;:::-;2183:6;::::0;;2162:38:::1;::::0;::::1;::::0;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;1994:240::o;586:96:30:-;665:10;586:96;:::o;-1:-1:-1:-;;;;;;;;:::o;14:198:37:-;84:20;;144:42;133:54;;123:65;;113:2;;202:1;199;192:12;113:2;65:147;;;:::o;217:198::-;;329:2;317:9;308:7;304:23;300:32;297:2;;;350:6;342;335:22;297:2;378:31;399:9;378:31;:::i;:::-;368:41;287:128;-1:-1:-1;;;287:128:37:o;420:403::-;;;;;583:3;571:9;562:7;558:23;554:33;551:2;;;605:6;597;590:22;551:2;633:31;654:9;633:31;:::i;:::-;623:41;711:2;696:18;;683:32;;-1:-1:-1;762:2:37;747:18;;734:32;;813:2;798:18;785:32;;-1:-1:-1;541:282:37;-1:-1:-1;;;541:282:37:o;828:190::-;;940:2;928:9;919:7;915:23;911:32;908:2;;;961:6;953;946:22;908:2;-1:-1:-1;989:23:37;;898:120;-1:-1:-1;898:120:37:o;1023:368::-;1190:66;1285:2;1281:15;;;1277:24;;1265:37;;1336:15;;;;1332:24;1327:2;1318:12;;1311:46;1382:2;1373:12;;1170:221::o;1396:226::-;1572:42;1560:55;;;;1542:74;;1530:2;1515:18;;1497:125::o;1627:542::-;1896:42;1965:15;;;1947:34;;2017:15;;;;2012:2;1997:18;;1990:43;2064:2;2049:18;;2042:34;;;;2107:2;2092:18;;2085:34;2150:3;2135:19;;2128:35;;;;1873:3;1858:19;;1840:329::o;2174:297::-;2378:42;2366:55;;;;2348:74;;2453:2;2438:18;;2431:34;2336:2;2321:18;;2303:168::o;2476:402::-;2678:2;2660:21;;;2717:2;2697:18;;;2690:30;2756:34;2751:2;2736:18;;2729:62;2827:8;2822:2;2807:18;;2800:36;2868:3;2853:19;;2650:228::o;2883:356::-;3085:2;3067:21;;;3104:18;;;3097:30;3163:34;3158:2;3143:18;;3136:62;3230:2;3215:18;;3057:182::o;3244:350::-;3446:2;3428:21;;;3485:2;3465:18;;;3458:30;3524:28;3519:2;3504:18;;3497:56;3585:2;3570:18;;3418:176::o;3599:177::-;3745:25;;;3733:2;3718:18;;3700:76::o",
  "source": "pragma solidity ^0.8.0;\r\n\r\nimport './../miner/ArteonMiner.sol';\r\nimport './../miner/interfaces/IArteonMiner.sol';\r\nimport './../../node_modules/@openzeppelin/contracts/access/Ownable.sol';\r\n\r\ncontract ArteonPoolARTX2000 is Ownable{\r\n  mapping (address => address) public getToken;\r\n  address[] public listedTokens;\r\n  address public gpu;\r\n  event TokenAdded(address listedToken, uint);\r\n\r\n  constructor(address _gpu) {\r\n    gpu = _gpu;\r\n  }\r\n\r\n  function tokens() external view returns (uint) {\r\n    return listedTokens.length;\r\n  }\r\n\r\n  function addToken(address token, uint256 blockTime, uint256 maxReward, uint256 halvings) external onlyOwner returns (address listedToken) {\r\n    require(getToken[token] == address(0), 'ArteonPool: LISTING_EXISTS');\r\n    // require(IERC20(token).owner() == msg.sender, 'ArteonPool: NOT_AN_OWNER');\r\n\r\n    bytes memory bytecode = type(ArteonMiner).creationCode;\r\n    bytes32 salt = keccak256(abi.encodePacked(token, gpu));\r\n    assembly {\r\n      listedToken := create2(0, add(bytecode, 32), mload(bytecode), salt)\r\n    }\r\n\r\n    IArteonMiner(listedToken).initialize(token, gpu, blockTime, maxReward, halvings);\r\n    getToken[token] = listedToken;\r\n    getToken[listedToken] = token;\r\n    listedTokens.push(listedToken);\r\n\r\n    emit TokenAdded(listedToken, listedTokens.length);\r\n    return listedToken;\r\n  }\r\n}\r\n",
  "sourcePath": "D:/Workspace/Arteon/monorepo/contracts/pools/ArteonPoolARTX2000.sol",
  "ast": {
    "absolutePath": "/D/Workspace/Arteon/monorepo/contracts/pools/ArteonPoolARTX2000.sol",
    "exportedSymbols": {
      "Address": [
        5400
      ],
      "Arteon": [
        3050
      ],
      "ArteonGPU": [
        1030
      ],
      "ArteonMiner": [
        1773
      ],
      "ArteonPoolARTX2000": [
        2096
      ],
      "Context": [
        5423
      ],
      "Counters": [
        5484
      ],
      "ERC165": [
        5711
      ],
      "ERC20": [
        3771
      ],
      "ERC721": [
        4916
      ],
      "ERC721Holder": [
        5104
      ],
      "IArteonGPU": [
        1050
      ],
      "IArteonMiner": [
        1815
      ],
      "IERC165": [
        5723
      ],
      "IERC20": [
        3849
      ],
      "IERC20Metadata": [
        3874
      ],
      "IERC721": [
        5032
      ],
      "IERC721Metadata": [
        5077
      ],
      "IERC721Receiver": [
        5050
      ],
      "Math": [
        5796
      ],
      "Ownable": [
        3172
      ],
      "SafeERC20": [
        4098
      ],
      "SafeMath": [
        6108
      ],
      "Strings": [
        5687
      ]
    },
    "id": 2097,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1973,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:14"
      },
      {
        "absolutePath": "/D/Workspace/Arteon/monorepo/contracts/miner/ArteonMiner.sol",
        "file": "./../miner/ArteonMiner.sol",
        "id": 1974,
        "nodeType": "ImportDirective",
        "scope": 2097,
        "sourceUnit": 1774,
        "src": "27:36:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Workspace/Arteon/monorepo/contracts/miner/interfaces/IArteonMiner.sol",
        "file": "./../miner/interfaces/IArteonMiner.sol",
        "id": 1975,
        "nodeType": "ImportDirective",
        "scope": 2097,
        "sourceUnit": 1816,
        "src": "65:48:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Workspace/Arteon/monorepo/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "./../../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 1976,
        "nodeType": "ImportDirective",
        "scope": 2097,
        "sourceUnit": 3173,
        "src": "115:73:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1977,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3172,
              "src": "223:7:14"
            },
            "id": 1978,
            "nodeType": "InheritanceSpecifier",
            "src": "223:7:14"
          }
        ],
        "contractDependencies": [
          1773,
          3172,
          5423
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2096,
        "linearizedBaseContracts": [
          2096,
          3172,
          5423
        ],
        "name": "ArteonPoolARTX2000",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "59770438",
            "id": 1982,
            "mutability": "mutable",
            "name": "getToken",
            "nodeType": "VariableDeclaration",
            "scope": 2096,
            "src": "235:44:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 1981,
              "keyType": {
                "id": 1979,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "244:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "235:28:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 1980,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "255:7:14",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5a9d1ac3",
            "id": 1985,
            "mutability": "mutable",
            "name": "listedTokens",
            "nodeType": "VariableDeclaration",
            "scope": 2096,
            "src": "284:29:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1983,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "284:7:14",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1984,
              "nodeType": "ArrayTypeName",
              "src": "284:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "824af0e0",
            "id": 1987,
            "mutability": "mutable",
            "name": "gpu",
            "nodeType": "VariableDeclaration",
            "scope": 2096,
            "src": "318:18:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1986,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "318:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1993,
            "name": "TokenAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1989,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "listedToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 1993,
                  "src": "358:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "358:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1991,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1993,
                  "src": "379:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1990,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "379:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "357:27:14"
            },
            "src": "341:44:14"
          },
          {
            "body": {
              "id": 2002,
              "nodeType": "Block",
              "src": "417:23:14",
              "statements": [
                {
                  "expression": {
                    "id": 2000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1998,
                      "name": "gpu",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1987,
                      "src": "424:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1999,
                      "name": "_gpu",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1995,
                      "src": "430:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "424:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2001,
                  "nodeType": "ExpressionStatement",
                  "src": "424:10:14"
                }
              ]
            },
            "id": 2003,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1995,
                  "mutability": "mutable",
                  "name": "_gpu",
                  "nodeType": "VariableDeclaration",
                  "scope": 2003,
                  "src": "403:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1994,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "402:14:14"
            },
            "returnParameters": {
              "id": 1997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "417:0:14"
            },
            "scope": 2096,
            "src": "391:49:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2011,
              "nodeType": "Block",
              "src": "493:39:14",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 2008,
                      "name": "listedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1985,
                      "src": "507:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 2009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "507:19:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2007,
                  "id": 2010,
                  "nodeType": "Return",
                  "src": "500:26:14"
                }
              ]
            },
            "functionSelector": "9d63848a",
            "id": 2012,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "461:2:14"
            },
            "returnParameters": {
              "id": 2007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2006,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2012,
                  "src": "487:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2005,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "486:6:14"
            },
            "scope": 2096,
            "src": "446:86:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2094,
              "nodeType": "Block",
              "src": "676:666:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2028,
                            "name": "getToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1982,
                            "src": "691:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 2030,
                          "indexExpression": {
                            "id": 2029,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2014,
                            "src": "700:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "691:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2033,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "718:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "710:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2031,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "710:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "710:10:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "691:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417274656f6e506f6f6c3a204c495354494e475f455849535453",
                        "id": 2036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "722:28:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7289d4fc10a3cf86d094f0efab5326bac31e9543ff80f1274ab0b587ebe59f3",
                          "typeString": "literal_string \"ArteonPool: LISTING_EXISTS\""
                        },
                        "value": "ArteonPool: LISTING_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7289d4fc10a3cf86d094f0efab5326bac31e9543ff80f1274ab0b587ebe59f3",
                          "typeString": "literal_string \"ArteonPool: LISTING_EXISTS\""
                        }
                      ],
                      "id": 2027,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "683:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "683:68:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2038,
                  "nodeType": "ExpressionStatement",
                  "src": "683:68:14"
                },
                {
                  "assignments": [
                    2040
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2040,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nodeType": "VariableDeclaration",
                      "scope": 2094,
                      "src": "842:21:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2039,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "842:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2045,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2042,
                          "name": "ArteonMiner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1773,
                          "src": "871:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ArteonMiner_$1773_$",
                            "typeString": "type(contract ArteonMiner)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_ArteonMiner_$1773_$",
                            "typeString": "type(contract ArteonMiner)"
                          }
                        ],
                        "id": 2041,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "866:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 2043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "866:17:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_ArteonMiner_$1773",
                        "typeString": "type(contract ArteonMiner)"
                      }
                    },
                    "id": 2044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "866:30:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "842:54:14"
                },
                {
                  "assignments": [
                    2047
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2047,
                      "mutability": "mutable",
                      "name": "salt",
                      "nodeType": "VariableDeclaration",
                      "scope": 2094,
                      "src": "903:12:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2046,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "903:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2055,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2051,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2014,
                            "src": "945:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2052,
                            "name": "gpu",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1987,
                            "src": "952:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2049,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "928:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "928:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "928:28:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2048,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "918:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "918:39:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "903:54:14"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "973:83:14",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "982:67:14",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1005:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1012:8:14"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1022:2:14",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1008:3:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1008:17:14"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1033:8:14"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1027:5:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1027:15:14"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1044:4:14"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "997:7:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "997:52:14"
                        },
                        "variableNames": [
                          {
                            "name": "listedToken",
                            "nodeType": "YulIdentifier",
                            "src": "982:11:14"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2040,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1012:8:14",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2040,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1033:8:14",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2025,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "982:11:14",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2047,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1044:4:14",
                      "valueSize": 1
                    }
                  ],
                  "id": 2056,
                  "nodeType": "InlineAssembly",
                  "src": "964:92:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2061,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2014,
                        "src": "1101:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2062,
                        "name": "gpu",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1987,
                        "src": "1108:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2063,
                        "name": "blockTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2016,
                        "src": "1113:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2064,
                        "name": "maxReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2018,
                        "src": "1124:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2065,
                        "name": "halvings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2020,
                        "src": "1135:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2058,
                            "name": "listedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2025,
                            "src": "1077:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2057,
                          "name": "IArteonMiner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1815,
                          "src": "1064:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IArteonMiner_$1815_$",
                            "typeString": "type(contract IArteonMiner)"
                          }
                        },
                        "id": 2059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1064:25:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArteonMiner_$1815",
                          "typeString": "contract IArteonMiner"
                        }
                      },
                      "id": 2060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1814,
                      "src": "1064:36:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 2066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1064:80:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2067,
                  "nodeType": "ExpressionStatement",
                  "src": "1064:80:14"
                },
                {
                  "expression": {
                    "id": 2072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2068,
                        "name": "getToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1982,
                        "src": "1151:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 2070,
                      "indexExpression": {
                        "id": 2069,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2014,
                        "src": "1160:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1151:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2071,
                      "name": "listedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2025,
                      "src": "1169:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1151:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2073,
                  "nodeType": "ExpressionStatement",
                  "src": "1151:29:14"
                },
                {
                  "expression": {
                    "id": 2078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2074,
                        "name": "getToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1982,
                        "src": "1187:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 2076,
                      "indexExpression": {
                        "id": 2075,
                        "name": "listedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2025,
                        "src": "1196:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1187:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2077,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2014,
                      "src": "1211:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1187:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2079,
                  "nodeType": "ExpressionStatement",
                  "src": "1187:29:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2083,
                        "name": "listedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2025,
                        "src": "1241:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2080,
                        "name": "listedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1985,
                        "src": "1223:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1223:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1223:30:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2085,
                  "nodeType": "ExpressionStatement",
                  "src": "1223:30:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2087,
                        "name": "listedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2025,
                        "src": "1278:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2088,
                          "name": "listedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1985,
                          "src": "1291:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 2089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1291:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2086,
                      "name": "TokenAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1993,
                      "src": "1267:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1267:44:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2091,
                  "nodeType": "EmitStatement",
                  "src": "1262:49:14"
                },
                {
                  "expression": {
                    "id": 2092,
                    "name": "listedToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2025,
                    "src": "1325:11:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2026,
                  "id": 2093,
                  "nodeType": "Return",
                  "src": "1318:18:14"
                }
              ]
            },
            "functionSelector": "b27dbeaf",
            "id": 2095,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2023,
                "modifierName": {
                  "id": 2022,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3121,
                  "src": "636:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "636:9:14"
              }
            ],
            "name": "addToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2014,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 2095,
                  "src": "556:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2013,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2016,
                  "mutability": "mutable",
                  "name": "blockTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2095,
                  "src": "571:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "571:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2018,
                  "mutability": "mutable",
                  "name": "maxReward",
                  "nodeType": "VariableDeclaration",
                  "scope": 2095,
                  "src": "590:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2017,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "590:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2020,
                  "mutability": "mutable",
                  "name": "halvings",
                  "nodeType": "VariableDeclaration",
                  "scope": 2095,
                  "src": "609:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2019,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "609:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "555:71:14"
            },
            "returnParameters": {
              "id": 2026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2025,
                  "mutability": "mutable",
                  "name": "listedToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 2095,
                  "src": "655:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2024,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "654:21:14"
            },
            "scope": 2096,
            "src": "538:804:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2097,
        "src": "192:1153:14"
      }
    ],
    "src": "0:1347:14"
  },
  "legacyAST": {
    "absolutePath": "/D/Workspace/Arteon/monorepo/contracts/pools/ArteonPoolARTX2000.sol",
    "exportedSymbols": {
      "Address": [
        5400
      ],
      "Arteon": [
        3050
      ],
      "ArteonGPU": [
        1030
      ],
      "ArteonMiner": [
        1773
      ],
      "ArteonPoolARTX2000": [
        2096
      ],
      "Context": [
        5423
      ],
      "Counters": [
        5484
      ],
      "ERC165": [
        5711
      ],
      "ERC20": [
        3771
      ],
      "ERC721": [
        4916
      ],
      "ERC721Holder": [
        5104
      ],
      "IArteonGPU": [
        1050
      ],
      "IArteonMiner": [
        1815
      ],
      "IERC165": [
        5723
      ],
      "IERC20": [
        3849
      ],
      "IERC20Metadata": [
        3874
      ],
      "IERC721": [
        5032
      ],
      "IERC721Metadata": [
        5077
      ],
      "IERC721Receiver": [
        5050
      ],
      "Math": [
        5796
      ],
      "Ownable": [
        3172
      ],
      "SafeERC20": [
        4098
      ],
      "SafeMath": [
        6108
      ],
      "Strings": [
        5687
      ]
    },
    "id": 2097,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1973,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:14"
      },
      {
        "absolutePath": "/D/Workspace/Arteon/monorepo/contracts/miner/ArteonMiner.sol",
        "file": "./../miner/ArteonMiner.sol",
        "id": 1974,
        "nodeType": "ImportDirective",
        "scope": 2097,
        "sourceUnit": 1774,
        "src": "27:36:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Workspace/Arteon/monorepo/contracts/miner/interfaces/IArteonMiner.sol",
        "file": "./../miner/interfaces/IArteonMiner.sol",
        "id": 1975,
        "nodeType": "ImportDirective",
        "scope": 2097,
        "sourceUnit": 1816,
        "src": "65:48:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Workspace/Arteon/monorepo/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "./../../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 1976,
        "nodeType": "ImportDirective",
        "scope": 2097,
        "sourceUnit": 3173,
        "src": "115:73:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1977,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3172,
              "src": "223:7:14"
            },
            "id": 1978,
            "nodeType": "InheritanceSpecifier",
            "src": "223:7:14"
          }
        ],
        "contractDependencies": [
          1773,
          3172,
          5423
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2096,
        "linearizedBaseContracts": [
          2096,
          3172,
          5423
        ],
        "name": "ArteonPoolARTX2000",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "59770438",
            "id": 1982,
            "mutability": "mutable",
            "name": "getToken",
            "nodeType": "VariableDeclaration",
            "scope": 2096,
            "src": "235:44:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 1981,
              "keyType": {
                "id": 1979,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "244:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "235:28:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 1980,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "255:7:14",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5a9d1ac3",
            "id": 1985,
            "mutability": "mutable",
            "name": "listedTokens",
            "nodeType": "VariableDeclaration",
            "scope": 2096,
            "src": "284:29:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1983,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "284:7:14",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1984,
              "nodeType": "ArrayTypeName",
              "src": "284:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "824af0e0",
            "id": 1987,
            "mutability": "mutable",
            "name": "gpu",
            "nodeType": "VariableDeclaration",
            "scope": 2096,
            "src": "318:18:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1986,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "318:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1993,
            "name": "TokenAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1989,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "listedToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 1993,
                  "src": "358:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "358:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1991,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1993,
                  "src": "379:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1990,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "379:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "357:27:14"
            },
            "src": "341:44:14"
          },
          {
            "body": {
              "id": 2002,
              "nodeType": "Block",
              "src": "417:23:14",
              "statements": [
                {
                  "expression": {
                    "id": 2000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1998,
                      "name": "gpu",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1987,
                      "src": "424:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1999,
                      "name": "_gpu",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1995,
                      "src": "430:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "424:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2001,
                  "nodeType": "ExpressionStatement",
                  "src": "424:10:14"
                }
              ]
            },
            "id": 2003,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1995,
                  "mutability": "mutable",
                  "name": "_gpu",
                  "nodeType": "VariableDeclaration",
                  "scope": 2003,
                  "src": "403:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1994,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "402:14:14"
            },
            "returnParameters": {
              "id": 1997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "417:0:14"
            },
            "scope": 2096,
            "src": "391:49:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2011,
              "nodeType": "Block",
              "src": "493:39:14",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 2008,
                      "name": "listedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1985,
                      "src": "507:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 2009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "507:19:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2007,
                  "id": 2010,
                  "nodeType": "Return",
                  "src": "500:26:14"
                }
              ]
            },
            "functionSelector": "9d63848a",
            "id": 2012,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "461:2:14"
            },
            "returnParameters": {
              "id": 2007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2006,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2012,
                  "src": "487:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2005,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "486:6:14"
            },
            "scope": 2096,
            "src": "446:86:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2094,
              "nodeType": "Block",
              "src": "676:666:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2028,
                            "name": "getToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1982,
                            "src": "691:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 2030,
                          "indexExpression": {
                            "id": 2029,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2014,
                            "src": "700:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "691:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2033,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "718:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "710:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2031,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "710:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "710:10:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "691:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417274656f6e506f6f6c3a204c495354494e475f455849535453",
                        "id": 2036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "722:28:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7289d4fc10a3cf86d094f0efab5326bac31e9543ff80f1274ab0b587ebe59f3",
                          "typeString": "literal_string \"ArteonPool: LISTING_EXISTS\""
                        },
                        "value": "ArteonPool: LISTING_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7289d4fc10a3cf86d094f0efab5326bac31e9543ff80f1274ab0b587ebe59f3",
                          "typeString": "literal_string \"ArteonPool: LISTING_EXISTS\""
                        }
                      ],
                      "id": 2027,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "683:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "683:68:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2038,
                  "nodeType": "ExpressionStatement",
                  "src": "683:68:14"
                },
                {
                  "assignments": [
                    2040
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2040,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nodeType": "VariableDeclaration",
                      "scope": 2094,
                      "src": "842:21:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2039,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "842:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2045,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2042,
                          "name": "ArteonMiner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1773,
                          "src": "871:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ArteonMiner_$1773_$",
                            "typeString": "type(contract ArteonMiner)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_ArteonMiner_$1773_$",
                            "typeString": "type(contract ArteonMiner)"
                          }
                        ],
                        "id": 2041,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "866:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 2043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "866:17:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_ArteonMiner_$1773",
                        "typeString": "type(contract ArteonMiner)"
                      }
                    },
                    "id": 2044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "866:30:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "842:54:14"
                },
                {
                  "assignments": [
                    2047
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2047,
                      "mutability": "mutable",
                      "name": "salt",
                      "nodeType": "VariableDeclaration",
                      "scope": 2094,
                      "src": "903:12:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2046,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "903:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2055,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2051,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2014,
                            "src": "945:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2052,
                            "name": "gpu",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1987,
                            "src": "952:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2049,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "928:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "928:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "928:28:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2048,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "918:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "918:39:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "903:54:14"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "973:83:14",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "982:67:14",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1005:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1012:8:14"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1022:2:14",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1008:3:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1008:17:14"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1033:8:14"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1027:5:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1027:15:14"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1044:4:14"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "997:7:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "997:52:14"
                        },
                        "variableNames": [
                          {
                            "name": "listedToken",
                            "nodeType": "YulIdentifier",
                            "src": "982:11:14"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2040,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1012:8:14",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2040,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1033:8:14",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2025,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "982:11:14",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2047,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1044:4:14",
                      "valueSize": 1
                    }
                  ],
                  "id": 2056,
                  "nodeType": "InlineAssembly",
                  "src": "964:92:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2061,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2014,
                        "src": "1101:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2062,
                        "name": "gpu",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1987,
                        "src": "1108:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2063,
                        "name": "blockTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2016,
                        "src": "1113:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2064,
                        "name": "maxReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2018,
                        "src": "1124:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2065,
                        "name": "halvings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2020,
                        "src": "1135:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2058,
                            "name": "listedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2025,
                            "src": "1077:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2057,
                          "name": "IArteonMiner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1815,
                          "src": "1064:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IArteonMiner_$1815_$",
                            "typeString": "type(contract IArteonMiner)"
                          }
                        },
                        "id": 2059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1064:25:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArteonMiner_$1815",
                          "typeString": "contract IArteonMiner"
                        }
                      },
                      "id": 2060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1814,
                      "src": "1064:36:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 2066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1064:80:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2067,
                  "nodeType": "ExpressionStatement",
                  "src": "1064:80:14"
                },
                {
                  "expression": {
                    "id": 2072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2068,
                        "name": "getToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1982,
                        "src": "1151:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 2070,
                      "indexExpression": {
                        "id": 2069,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2014,
                        "src": "1160:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1151:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2071,
                      "name": "listedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2025,
                      "src": "1169:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1151:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2073,
                  "nodeType": "ExpressionStatement",
                  "src": "1151:29:14"
                },
                {
                  "expression": {
                    "id": 2078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2074,
                        "name": "getToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1982,
                        "src": "1187:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 2076,
                      "indexExpression": {
                        "id": 2075,
                        "name": "listedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2025,
                        "src": "1196:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1187:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2077,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2014,
                      "src": "1211:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1187:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2079,
                  "nodeType": "ExpressionStatement",
                  "src": "1187:29:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2083,
                        "name": "listedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2025,
                        "src": "1241:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2080,
                        "name": "listedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1985,
                        "src": "1223:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1223:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1223:30:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2085,
                  "nodeType": "ExpressionStatement",
                  "src": "1223:30:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2087,
                        "name": "listedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2025,
                        "src": "1278:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2088,
                          "name": "listedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1985,
                          "src": "1291:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 2089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1291:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2086,
                      "name": "TokenAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1993,
                      "src": "1267:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1267:44:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2091,
                  "nodeType": "EmitStatement",
                  "src": "1262:49:14"
                },
                {
                  "expression": {
                    "id": 2092,
                    "name": "listedToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2025,
                    "src": "1325:11:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2026,
                  "id": 2093,
                  "nodeType": "Return",
                  "src": "1318:18:14"
                }
              ]
            },
            "functionSelector": "b27dbeaf",
            "id": 2095,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2023,
                "modifierName": {
                  "id": 2022,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3121,
                  "src": "636:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "636:9:14"
              }
            ],
            "name": "addToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2014,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 2095,
                  "src": "556:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2013,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2016,
                  "mutability": "mutable",
                  "name": "blockTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2095,
                  "src": "571:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "571:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2018,
                  "mutability": "mutable",
                  "name": "maxReward",
                  "nodeType": "VariableDeclaration",
                  "scope": 2095,
                  "src": "590:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2017,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "590:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2020,
                  "mutability": "mutable",
                  "name": "halvings",
                  "nodeType": "VariableDeclaration",
                  "scope": 2095,
                  "src": "609:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2019,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "609:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "555:71:14"
            },
            "returnParameters": {
              "id": 2026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2025,
                  "mutability": "mutable",
                  "name": "listedToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 2095,
                  "src": "655:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2024,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "654:21:14"
            },
            "scope": 2096,
            "src": "538:804:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2097,
        "src": "192:1153:14"
      }
    ],
    "src": "0:1347:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xf4c563a3ea86ff1f4275e8c207df0375a51963f2b831b7bf4da8be938d92876c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "listedToken",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "TokenAdded",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x1bc5651c453359f0971a24d7d22502EF76C0fDD7",
      "transactionHash": "0x93be4822926b5c21e91e19ecc3aa18282ebcdb0e983c3751745eed1392a410c8"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-07-10T13:38:07.113Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}